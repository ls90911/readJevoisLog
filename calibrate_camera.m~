function [] = calibrate_camera(plot_num)

global OB

local_detection_error_x = zeros(length(OB.DETEC_TIME_LOCAL),1);
local_detection_error_y = zeros(length(OB.DETEC_TIME_LOCAL),1);

for i = 1:length(OB.DETEC_TIME_LOCAL)
    if OB.DETEC_X_LOCAL_OT(i) > -1
        local_detection_error_x(i) =  0;
        local_detection_error_y(i) =  0;
    else
        local_detection_error_x(i) =  OB.DETEC_X_LOCAL_OT(i) - OB.DETEC_X_LOCAL(i);
        local_detection_error_y(i) =  OB.DETEC_Y_LOCAL_OT(i) - OB.DETEC_Y_LOCAL(i);
    end
    
end

p_x = polyfit(OB.DETEC_X_LOCAL',local_detection_error_x,1);
fitted_x = polyval(p_x,OB.DETEC_X_LOCAL);
p_y = polyfit(OB.DETEC_Y_LOCAL',local_detection_error_y,1);
fitted_y = polyval(p_y,OB.DETEC_Y_LOCAL);
figure(1234)
subplot(2,1,1)

subplot(2,1,2)

figure(plot_num)
subplot(4,1,1)
hold on
plot(OB.DETEC_X_LOCAL,local_detection_error_x,'.');
plot(OB.DETEC_X_LOCAL,fitted_x);


subplot(4,1,2)
hold on
plot(OB.DETEC_Y_LOCAL,local_detection_error_y,'.');
plot(OB.DETEC_Y_LOCAL,fitted_y);

subplot(4,1,3)
hold on
plot(OB.DETEC_TIME_LOCAL,OB.DETEC_X_LOCAL,'*');
plot(OB.DETEC_TIME_LOCAL,OB.DETEC_X_LOCAL_OT);
legend('detection','OT');
ylabel('x[m]');

subplot(4,1,4)
hold on
plot(OB.DETEC_TIME_LOCAL,OB.DETEC_Y_LOCAL,'*');
%plot(OB.Y_OT);
plot(OB.DETEC_TIME_LOCAL,OB.DETEC_Y_LOCAL_OT);
legend('detection','OT');
ylabel('y[m]');
xlabel('time [s]');

end